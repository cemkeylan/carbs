#!/bin/sh

## CARBS, Cem's Auto-Rice Bootstrapping Script
## Copyright (C) 2019 Cem Keylan <cem@ckyln.com>

##    This program is free software: you can redistribute it and/or modify
##    it under the terms of the GNU General Public License as published by
##    the Free Software Foundation, either version 3 of the License, or
##    (at your option) any later version.
##
##    This program is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License
##    along with this program.  If not, see <https://www.gnu.org/licenses/>.


# Messages below are taken from Arch scripts
out() { printf "$1\\n"; }
error() { out "==> ERROR: $@"; } >&2
warning() { out "==> WARNING: $@"; } >&2
msg() { out "==> $@"; }
msg2() { out "  -> $@";}
die() { error "$@"; exit 1; }

[ $(id -u) = 0 ] && die 'Please run this script without root priviliges'

usage() {
	cat <<EOF
usage: ${0##*/} [options]

  Options:
    -p <progs.csv>    Use an alternative progs.csv file (must be local)
    -r <repo url>     Use an alternative dotfiles repo
    -d <location>     Specify another place to install dotfiles
    -n		      Run the script noninteractively
    -P <filename>     Download progs.csv and exit
    -k <X11-Keymap>   Set X11 Keymap

    -h/--help         Print this help message

CARBS installs a functional desktop environment.

EOF
}

if [ "$1" = "-h" ] || [ "$1" = "--help" ] ; then
	usage
	exit
fi

while getopts ':p::d::r:n:P::k:' flag; do
	case $flag in
		P) git archive --remote=git://git.ckyln.com/carbs.git HEAD progs.csv | tar -xO > $OPTARG && exit || die 'Could not download progs.csv' ;;
		p) [ -e $OPTARG ] && progs="$(realpath $OPTARG)" || die "Could not find progs.csv file" ;;
		r) git ls-remote $OPTARG >/dev/null 2>&1 && dotfiles=$OPTARG || die "Could not find repo" ;;
		d) [ -d $OPTARG ] && targetdir="$(realpath $OPTARG)" || die "Target location $OPTARG does not exist or is not a directory" ;;
		n) sudo -V >/dev/null 2>&1 && interactive=0 || die "Sudo must be installed in order to have a non interactive installation" ;;
		k) XK=$OPTARG ;;
		:) die "${0##*/}: option requires an argument -- $OPTARG" ;;
		?) die "${0##*/}: invalid option -- $OPTARG" ;;
	esac
done

[ -z $dotfiles ] && dotfiles="git://git.ckyln.com/dotfiles"
[ -z $targetdir ] && targetdir="$HOME"
[ -z $progs ] && git archive --remote=git://git.ckyln.com/carbs.git HEAD progs.csv | tar -xO > /tmp/progs.csv && progs="/tmp/progs.csv"
[ -z $interactive ] && interactive=1
[ "$interactive" = "0" ] && [ -z $XK ] && XK="us"

welcomepage() {
	clear
	cat <<EOF
================================================== 
===     ======  =====       ===      =====      == 
==  ===  ====    ====  ====  ==  ===  ===  ====  = 
=  =========  ==  ===  ====  ==  ====  ==  ====  = 
=  ========  ====  ==  ===   ==  ===  ====  ====== 
=  ========  ====  ==      ====      =======  ==== 
=  ========        ==  ====  ==  ===  ========  == 
=  ========  ====  ==  ====  ==  ====  ==  ====  = 
==  ===  ==  ====  ==  ====  ==  ===  ===  ====  = 
===     ===  ====  ==  ====  ==      =====      == 
================================================== 

Welcome to Cem's Auto-Rice Bootstrapping Script!

Please make sure that this is a brand new installation
of Arch Linux, Manjaro Linux, or Anarchy Linux.

WARNING: Carbs will alter your home directory ($HOME), so you might
want to backup in case you have important files on your home directory
EOF
printf "Proceed? (y/N) "
read ans
[ "$ans" = "y" ] || die 'User exited'
}

makeinstall() {
	cd /tmp
	dir="$(mktemp -d)"
	git clone $1 $dir || die 'Could not clone git repo'
	cd $dir
	make || die "Could not build $1"
	sudo make install || die "Could not install $1"
}

installcsv() {\
	[ -e $progs ] || die 'Could not retrieve progs.csv'
	while IFS=, read -r src name
	do
		case $src in
			y)
				out "Installing $name"
				yay -S --noconfirm --needed $name >/dev/null || die "Could not install $name"
				msg "Installed $name" ;;
			g)
				out "Installing $name"
				makeinstall $name || die "Could not install $name"
				msg "Installed $name" ;;
			*)
				out "Installing $name"
				sudo pacman -S --noconfirm --needed $name >/dev/null || die "Could not install $name"
				msg "Installed $name" ;;
		esac
	done < $progs
}

installyay() {\
	error 'Could not install yay-bin, building from source'
	cd /tmp
	dir=$(mktemp -d)
	cd $dir
	curl -Lo $dir/PKGBUILD "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=yay"
	makepkg --noconfirm --ignore-arch -si || die 'Could not install yay'
}

basedevelopenrc () {
	ORBDL="pacman autoconf automake binutils bison fakeroot file findutils flex gawk gcc \
	gettext grep groff gzip libtool m4 make patch pkgconf sed sudo texinfo util-linux which"
	for pkg in ${ORBDL}; do
		out "Installing $pkg"
		sudo pacman -S --noconfirm --needed $pkg >/dev/null || die "Could not install $pkg"
		msg "Installed $pkg"
	done
}

installyaybin() {\
	if [ -d /etc/init.d ]; then
		basedevelopenrc
	else
		sudo pacman -S --noconfirm --needed base-devel || die 'Could not install base-devel'
	fi
	cd /tmp
	dir=$(mktemp -d)
	cd $dir
	curl -Lo $dir/PKGBUILD "https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=yay-bin"
	makepkg --noconfirm -si || installyay
}

sudouser() {\
	warning "You don't seem to have sudo installed\nCarbs will now install sudo and add you\nto sudoers"
	su -c "pacman -Sy && pacman -S sudo --noconfirm && \
	printf '$1 ALL=(ALL) NOPASSWD: ALL\n' > /etc/sudoers.d/new" 
}

dotfilesinstall() {
	cd /tmp
	dir="$(mktemp -d)"
	git clone $1 $dir/repo
	cp -rfT $dir/repo $targetdir
	rm $targetdir/README* $targetdir/LICENSE $targetdir/.git -rf $targetdir/screenshots
}

neovimconfig() {
	out 'Installing nvim plugins'
	curl -fLo $targetdir/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim || error 'Could not download plug.vim'
	[ $targetdir = $HOME ] && nvim -c "PlugInstall | :q | :q" && msg 'Installed vim plugs'
}

wallpaperinstall() {
	out ' Installing wallpapers'
	mkdir -p $targetdir/Pictures
	git clone git://git.ckyln.com/Wallpapers $targetdir/Pictures/Wallpapers && msg 'Downloaded Wallpapers' || error 'Could not install wallpapers'
}

keyboardset() {
	if [ -z $XK ]; then
		cat <<EOF
What X11 Keymap are you going to use? (default: us)
EOF
		read XK
		[ -z $XK ] && XK="us"
	fi
		cat >$HOME/.config/xkeymap <<EOF
KEYMAP=$XK
EOF
}

addusergroups() {
	groups="wheel audio video power"
	for group in ${groups}; do
		msg "Adding user to the $group group"
		sudo usermod -a -G $group $USER || error "Could not add you to the $group group, you might want to do it yourself"
	done
}

finalize() {
	clear
	cat <<EOF
Carbs is finished, it is best to do a reboot

EOF
}



if [ $interactive = 1 ]; then
	welcomepage
	sudo -V >/dev/null 2>&1 || sudouser $USER
fi
sudo pacman -Sy || die 'Could not refresh pacman db'
yay -V >/dev/null 2>&1 || installyaybin
installcsv
dotfilesinstall $dotfiles
nvim -v >/dev/null 2>&1 && neovimconfig || warning 'Not installing nvim plugins'
sudo chsh -s /usr/bin/zsh $USER
wallpaperinstall
keyboardset
addusergroups
finalize
